＃＃ Visual Studioの一時ファイルを無視し、結果をビルドし、
＃＃人気のあるVisualStudioアドオンによって生成されたファイル。
＃＃
＃＃ https：//github.com/github/gitignore/blob/master/VisualStudio.gitignoreから最新情報を入手する

＃ユーザー固有のファイル
* .rsuser
* .suo
* .user
* .userosscache
* .sln.docstates
*.obj
*.exe
*.exp
*.pdb
*.dll
*.user
*.aps
*.pch
*.vspscc
*_i.c
*_p.c
*.ncb
*.suo
*.tlb
*.tlh
*.bak
*.cache
*.ilk
*.log
*.zip
[Dd]ebug*/
*.lib
*.sbr
Thumbs.db
[Ll]ib/
[Rr]elease*/
[Tt]est[Rr]esults/
_UpgradeReport_Files/
_ReSharper.*/

＃ユーザー固有のファイル（MonoDevelop / Xamarin Studio）
* .userprefs

＃モノラル自動生成ファイル
mono_crash。*

＃ビルド結果
[ Dd ] ebug /
[ Dd ] ebugPublic /
[ Rr ] elease /
[ Rr ]は/を消去します
x64 /
x86 /
[ Ww ] [ Ii ] [ Nn ] 32 /
[ Aa ] [ Rr ] [ Mm ] /
[ Aa ] [ Rr ] [ Mm ] 64 /
bld /
[ Bb ] in /
[ Oo ] bj /
[ Ll ] og /
[ Ll ] ogs /

＃のVisual Studio 2015/2017キャッシュ/ optionsディレクトリ
.vs /
＃あなたがwwwrootの中で、プロジェクトの静的ファイルを作成するタスクがある場合はコメントを解除
＃ wwwrootに/

＃Visual Studio2017の自動生成ファイル
生成された\ファイル/

＃ MSTestをテスト結果
[ Tt ] est [ Rr ] esult * /
[ Bb ] uild [ Ll ] og。*

＃ NUnitの
* .VisualState.xml
TestResult.xml
nunit- * .xml

＃ ATLプロジェクトのビルド結果
[ Dd ] ebugPS /
[ Rr ] eleasePS /
dlldata.c

＃ベンチマーク結果
BenchmarkDotNet.Artifacts /

＃ .NET Core
project.lock.json
project.fragment.lock.json
アーティファクト/

＃ ASP.NETスキャフォールディング
ScaffoldingReadMe.txt

＃ StyleCop
StyleCopReport.xml

＃ファイルは、Visual Studioで構築されました
* _i.c
* _p.c
* _h.h
* .ilk
* .meta
* .obj
* .iobj
* .pch
* .pdb
* .ipdb
* .pgc
* .pgd
* .rsp
* .sbr
* .tlb
* .tli
* .tlh
* .tmp
* .tmp_proj
* _wpftmp.csproj
* .log
* .vspscc
* .vssscc
.builds
* .pidb
* .svclog
* .scc

＃大胆テストファイル
_Chutzpah *

＃のVisual C ++のキャッシュファイル
ipch /
* .aps
* .ncb
* .opendb
* .opensdf
* .sdf
* .cachefile
* .VC.db
* .VC.VC.opendb

＃ Visual Studioのプロファイラ
* .psess
* .vsp
* .vspx
* .sap

＃ Visual Studioのトレースファイル
* .e2e

＃ TFS2012ローカルワークスペース
$ tf /

＃ガイダンス自動化ツールキット
* .gpState

＃ ReSharperのは、アドインをコーディング.NETで
_ReSharper * /
* 。[ Rr ] e [ Ss ] harper
* .DotSettings.user

＃チームシティーは、ビルドアドインです
_TeamCity *

＃ DotCoverは、コードカバレッジツールであります
* .dotCover

＃ AxoCoverは、コードカバレッジツールであります
.axoCover / *
！.axoCover / settings.json

＃布団は無料、クロスプラットフォームのコードカバレッジツールであります
カバレッジ* .json
カバレッジ* .xml
カバレッジ* .info

＃ Visual Studioのコードカバレッジ結果
* .coverage
* .coveragexml

＃ NCrunch
_NCrunch_ *
。*クランチ* .local.xml
nCrunchTemp_ *

＃ MightyMoose
* .mm。*
AutoTest.Net /

＃ウェブワークベンチ（SASS）
.sass-キャッシュ/

＃のInstallShield出力フォルダ
[ Ee ] xpress /

＃ DocProjectは、ドキュメントジェネレータのアドインです
DocProject / buildhelp /
DocProject /ヘルプ/ * .HxT
DocProject /ヘルプ/ * .HxC
DocProject /ヘルプ/ * .hhc
DocProject /ヘルプ/ * .hhk
DocProject /ヘルプ/ * .hhp
DocProject /ヘルプ/ Html2
DocProject /ヘルプ/ html

＃ Click-Onceディレクトリ
公開/

＃のWeb出力を公開
* 。[ Pp ] ublish.xml
* .azurePubxml
＃注：Web展開設定をチェックインする場合は、次の行にコメントを付けてください。
＃ただし、データベース接続文字列（潜在的なパスワードを含む）は暗号化されません
* .pubxml
* .publishproj

＃マイクロソフトのAzure Web Appでは、設定を公開します。必要に応じて次の行にコメントします
＃チェックインあなたAzureのWebアプリケーションは、設定を公開しますが、機密情報が含まれています
＃これらのスクリプトでは暗号化されません
PublishScripts /

＃ NuGetパッケージ
* .nu​​pkg
＃ NuGetシンボルパッケージ
* .snupkg
＃ので、パッケージの無視することができ、フォルダのパッケージが復元します
** / [ Pp ] ackages / *
＃ MSBuildのターゲットとして使用され、ビルド/、除きます。
！** / [ Pp ] ackages / build /
＃必要に応じてコメントを解除しますが、通常は必要に応じて再生成されます
＃！** / [Pp] ackages / repository.config
＃ NuGet V3のproject.jsonファイルには、より多くの無視ファイルを生成します
* .nu​​get.props
* .nu​​get.targets

＃マイクロソフトのAzureのビルド出力
csx /
* .build.csdef

＃マイクロソフトのAzureエミュレータ
ecf /
rcf /

＃ Windowsストアアプリのパッケージのディレクトリとファイル
AppPackages /
BundleArtifacts /
Package.StoreAssociation.xml
_pkginfo.txt
* .appx
* .appxbundle
* .appxupload

＃ Visual Studioのキャッシュファイル
＃ .cacheで終わるファイルは無視できます
* 。[ Cc ]痛み
＃ただし、.cacheで終わるディレクトリを追跡します
！？* 。[ Cc ]痛み/

＃その他
ClientBin /
〜$ *
* 〜
* .dbmdl
* .dbproj.schemaview
* .jfm
* .pfx
* .publishsettings
orleans.codegen.cs

＃厳密な名前のファイルを含めると、セキュリティリスクが発生する可能性があります
＃（https://github.com/github/gitignore/pull/2483#issue-259490424）
＃ *。snk

＃複数のワークフローがあるため、bower_componentsを無視するには次の行のコメントを解除します
＃（https://github.com/github/gitignore/pull/1529#issuecomment-104372622）
＃ bower_components /

＃ RIA / Silverlightのプロジェクト
Generated_Code /

＃古いプロジェクトファイルの変換によるバックアップとレポートファイル
＃新しいVisualStudioバージョンに。バックアップファイルは必要ありません、
＃私たちが持っているので、gitの;-)
_UpgradeReport_Files /
バックアップ* /
UpgradeLog * .XML
UpgradeLog * .htm
ServiceFabricBackup /
* .rptproj.bak

＃ SQL Serverのファイル
* .mdf
* .ldf
* .ndf

＃ビジネスインテリジェンスプロジェクト
* .rdl.data
* .bim.layout
* .bim_ * .settings
* .rptproj.rsuser
* - [ Bb ] ackup.rdl
* - [ Bb ] ackup  （ [ 0-9 ] ）。rdl
* - [ Bb ] ackup  （ [ 0-9 ] [ 0-9 ] ）。rdl

＃マイクロソフトの偽物
FakesAssemblies /

＃ GhostDocプラグインの設定ファイル
* .GhostDoc.xml

＃ Visual Studio用のNode.jsツール
.ntvs_analysis.dat
node_modules /

＃Visual Studio6ビルドログ
* .plg

＃のVisual Studio 6ワークスペースオプションファイル
* .opt

＃のVisual Studio 6自動生成されたワークスペースファイル（など開いていたどのファイル含まれています）
* .vbw

＃のVisual Studio LightSwitchのビルド出力
** / * .HTMLClient / GeneratedArtifacts
** / * .DesktopClient / GeneratedArtifacts
** / * .DesktopClient / ModelManifest.xml
** / * .Server / GeneratedArtifacts
** / * .Server / ModelManifest.xml
_Pvt_Extensions

＃パケット依存関係マネージャー
.paket / paket.exe
パケットファイル/

＃ FAKE-F＃Make
.fake /

＃のCodeRush個人設定
.cr /パーソナル

＃ Visual Studio用のPythonツール（PTVS）
__pycache__ /
* .pyc

＃ケーキ-使用している場合はコメントを外します
＃ツール/ **
＃！tools / packages.config

＃タブスタジオ
* .tss

＃ TelerikのJustMock設定ファイル
* .jmconfig

＃のBizTalkビルド出力
* .btp.cs
* .btm.cs
* .odx.cs
* .xsd.cs

＃ OpenCover UIの解析結果
OpenCover /

＃ Azureのストリーム解析をローカルの実行出力
ASALocalRun /

＃ MSBuildのバイナリおよび構造化ログ
* .binlog

＃ NVidiaのNsight GPUデバッガの設定ファイル
* .nvuser

＃ MFractors（Xamarin生産性ツール）作業フォルダ
.mfractor /

＃VisualStudioのローカル履歴
.localhistory /

＃ BeatPulseヘルス一時データベース
healthchecksdb

＃のVisual Studio 2017でのパッケージ参照の変換ツールのバックアップフォルダ
MigrationBackup /

＃ Ionide（クロスプラットフォームF＃VSコードツール）作業フォルダ
.ionide /

＃ Fody-自動生成されたXMLスキーマ
FodyWeavers.xsd